diff --git a/src/Time.Duration.savi b/src/Time.Duration.savi
index 7da2d5b..e427278 100644
--- a/src/Time.Duration.savi
+++ b/src/Time.Duration.savi
@@ -166,7 +166,7 @@
     )
 
   :: Print the duration for human inspection (the format is subject to change).
-  :fun inspect_into(output String'iso)
+  :fun inspect_into(output String'ref) None
     weeks_result = @total_weeks_with_remainder
     days_result = weeks_result.tail.total_days_with_remainder
     hours_result = days_result.tail.total_hours_with_remainder
@@ -183,42 +183,41 @@
     output << "Time.Duration("
 
     if (weeks > 0) (
-      output = Inspect.into(--output, weeks), output << " weeks"
+      Inspect.into(output, weeks), output << " weeks"
       printed_anything = True
     )
 
     if (days > 0) (
       if printed_anything (output << ", ")
-      output = Inspect.into(--output, days), output << " days"
+      Inspect.into(output, days), output << " days"
       printed_anything = True
     )
 
     if (hours > 0) (
       if printed_anything (output << ", ")
-      output = Inspect.into(--output, hours), output << " hours"
+      Inspect.into(output, hours), output << " hours"
       printed_anything = True
     )
 
     if (minutes > 0) (
       if printed_anything (output << ", ")
-      output = Inspect.into(--output, minutes), output << " minutes"
+      Inspect.into(output, minutes), output << " minutes"
       printed_anything = True
     )
 
     if (seconds > 0) (
       if printed_anything (output << ", ")
-      output = Inspect.into(--output, seconds), output << " seconds"
+      Inspect.into(output, seconds), output << " seconds"
       printed_anything = True
     )
 
     if (nanoseconds > 0) (
       if printed_anything (output << ", ")
-      output = Inspect.into(--output, nanoseconds), output << " nanoseconds"
+      Inspect.into(output, nanoseconds), output << " nanoseconds"
       printed_anything = True
     )
 
     output << ")"
-    --output
 
   :: Return True if the given duration is exactly equivalent to this one.
   :fun "=="(other Time.Duration'box)
diff --git a/src/Time.savi b/src/Time.savi
index 2084a65..06840cc 100644
--- a/src/Time.savi
+++ b/src/Time.savi
@@ -178,16 +178,15 @@
     (@total_seconds % @_seconds_per_minute).u8
 
   :: Print the time data for human inspection (the format is subject to change).
-  :fun inspect_into(output String'iso)
+  :fun inspect_into(output String'ref) None
     // TODO: Properly pad numbers with zeros for a constant string width.
-    output = Inspect.into(--output, @year),       output.push_byte('-')
-    output = Inspect.into(--output, @month),      output.push_byte('-')
-    output = Inspect.into(--output, @day),        output.push_byte(' ')
-    output = Inspect.into(--output, @hour),       output.push_byte(':')
-    output = Inspect.into(--output, @minute),     output.push_byte(':')
-    output = Inspect.into(--output, @second),     output.push_byte('\'')
-    output = Inspect.into(--output, @nanosecond)
-    --output
+    Inspect.into(output, @year),       output.push_byte('-')
+    Inspect.into(output, @month),      output.push_byte('-')
+    Inspect.into(output, @day),        output.push_byte(' ')
+    Inspect.into(output, @hour),       output.push_byte(':')
+    Inspect.into(output, @minute),     output.push_byte(':')
+    Inspect.into(output, @second),     output.push_byte('\'')
+    Inspect.into(output, @nanosecond)
 
   :: Returns a bit-packed representation of the year, month, and day,
   :: for internal reuse by other functions that need this information.
