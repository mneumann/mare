:import "spec"

:class RegexSpec
  :is Spec
  :const describes: "Regex"

  :it "matches any character with `.`"
    regex = Regex.compile("a.c")
    @assert = regex.matches("a").not
    @assert = regex.matches("ac").not
    @assert = regex.matches("a c")
    @assert = regex.matches("abc")
    @assert = regex.matches("abbc").not
    @assert = regex.matches("abbbc").not

  :it "matches an optional character zero or one time with `?`"
    regex = Regex.compile("ab?c")
    @assert = regex.matches("a").not
    @assert = regex.matches("ac")
    @assert = regex.matches("a c").not
    @assert = regex.matches("abc")
    @assert = regex.matches("abbc").not
    @assert = regex.matches("abbbc").not

  :it "matches a character repeated zero or more times with `*`"
    regex = Regex.compile("ab*c")
    @assert = regex.matches("a").not
    @assert = regex.matches("ac")
    @assert = regex.matches("a c").not
    @assert = regex.matches("abc")
    @assert = regex.matches("abbc")
    @assert = regex.matches("abbbc")

  :it "matches a character repeated one or more times with `+`"
    regex = Regex.compile("ab+c")
    @assert = regex.matches("a").not
    @assert = regex.matches("ac").not
    @assert = regex.matches("a c").not
    @assert = regex.matches("abc")
    @assert = regex.matches("abbc")
    @assert = regex.matches("abbbc")

  :it "matches one of several choices with `|`"
    regex = Regex.compile("abc|jkl|xyz")
    @assert = regex.matches("abc")
    @assert = regex.matches("ab").not
    @assert = regex.matches("jkl")
    @assert = regex.matches("kl").not
    @assert = regex.matches("xyz")
    @assert = regex.matches("xz").not

    // Internally, a choice of 2 is a special case, so we test it separately.
    regex = Regex.compile("abc|jkl")
    @assert = regex.matches("abc")
    @assert = regex.matches("ab").not
    @assert = regex.matches("jkl")
    @assert = regex.matches("kl").not
    @assert = regex.matches("xyz").not
    @assert = regex.matches("xz").not

  :it "matches any digit with `\d`"
    regex = Regex.compile("a\dc")
    @assert = regex.matches("a").not
    @assert = regex.matches("ac").not
    @assert = regex.matches("a c").not
    @assert = regex.matches("abc").not
    @assert = regex.matches("a0c")
    @assert = regex.matches("a9c")

  :it "matches any ASCII word character with `\w`"
    regex = Regex.compile("a\wc")
    @assert = regex.matches("a").not
    @assert = regex.matches("ac").not
    @assert = regex.matches("a c").not
    @assert = regex.matches("a_c")
    @assert = regex.matches("abc")
    @assert = regex.matches("a0c")
    @assert = regex.matches("a9c")
    @assert = regex.matches("aBc")
    @assert = regex.matches("ABC").not
