# We use Cirrus CI to create release builds for a handful of platforms.
#
# This task builds the Savi compiler, and then packages it all up in a tar.gz
# file to be attached to the release in GitHub, for easy download and use.

task:
  environment:
    GITHUB_API_TOKEN: ENCRYPTED[5f9b960dd53fb09b34bcb26f7f8a926071f0177e0ec814e7d122db0e2184d3e913ec78d5748e27664c0fef66fde950fe]
    CC: clang
    CXX: clang++

  matrix:
    - name: x86_64-unknown-linux-gnu
      container:
        image: ubuntu:21.04
      environment:
        TRIPLE: x86_64-unknown-linux-gnu
        DEPS_INSTALL: "\
          apt-get update && \
          apt-get install -y --no-install-recommends \
            apt-transport-https ca-certificates curl clang make \
            libgc-dev libevent-dev libpcre3-dev && \
          curl -fsSL https://crystal-lang.org/install.sh | bash"
        # Without this next environment var, apt-get will try to ask us
        # interactive questions, to which we will be unable to respond...
        DEBIAN_FRONTEND: noninteractive

    - name: x86_64-unknown-linux-musl
      environment:
        TRIPLE: x86_64-unknown-linux-musl
        DEPS_INSTALL: "\
          apk add --no-cache --update \
            bash curl \
            alpine-sdk coreutils gcc g++ clang make linux-headers llvm12-dev \
            pcre-dev libevent-static gc-dev crystal shards"
        # For some reason clang++ is missing some c++ headers unless we
        # explicitly mention them in this environment variable here.
        CPLUS_INCLUDE_PATH: /usr/include/c++/10.3.1:/usr/include/c++/10.3.1/x86_64-alpine-linux-musl
        LIBRARY_PATH: /usr/lib/gcc/x86_64-alpine-linux-musl/10.3.1
      container:
        image: alpine:edge # TODO: use alpine:3.15 or newest stable release when available

    # # TODO: Enable FreeBSD after getting it working:
    # - name: x86_64-unknown-freebsd
    #   environment:
    #     TRIPLE: x86_64-unknown-freebsd
    #     DEPS_INSTALL: "
    #       echo 'FreeBSD:{url:"pkg+http://pkg.FreeBSD.org/${ABI}/latest"}' \
    #         > /usr/local/etc/pkg/repos/FreeBSD.conf && \
    #       pkg update && \
    #       pkg install -y libunwind bash curl llvm-devel crystal shards && \
    #       ln -s /usr/local/bin/llvm-config-devel /usr/bin/llvm-config"
    #   freebsd_instance:
    #     image: freebsd-13-0-release-amd64

    - name: x86_64-apple-macosx
      environment:
        TRIPLE: x86_64-apple-macosx
        DEPS_INSTALL: brew update --preinstall && brew install libiconv crystal
        # Set up the SDKROOT path specific to the present XCode version.
        SDKROOT: /Applications/Xcode-12.5.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
      macos_instance:
        image: big-sur-xcode-12.5

    # TODO: arm64-apple-macos

  os_info_script:
    - uname
    - uname -m
    - uname -a

  deps_script:
    - echo "${DEPS_INSTALL}"
    - sh -c "${DEPS_INSTALL}"

  build_script:
    - mkdir -p out/bin
    - make build/savi-release SAVI_VERSION=${CIRRUS_TAG:-unknown}
    - mv build/savi-release out/bin/savi

  copy_packages_script:
    - mkdir -p out
    - cp -r packages out/packages

  archive_script:
    - tar -czvf /tmp/savi.tar.gz -C out .

  publish_if_release_script:
    - >-
      sh -c '
        test -z "${CIRRUS_RELEASE}" || \
          curl -v --fail -X POST \
            -H "Authorization: token ${GITHUB_API_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @/tmp/savi.tar.gz \
            "https://uploads.github.com/repos/$CIRRUS_REPO_FULL_NAME/releases/$CIRRUS_RELEASE/assets?name=${TRIPLE}-savi.tar.gz" \
      '
