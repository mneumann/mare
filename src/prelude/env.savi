:class val Env
  :let out StdStream
  :let err StdStream
  :new val _create
    @out = StdStream._out
    @err = StdStream._err

  :fun "exit_code="(value)
    LibPony.pony_exitcode(value)

:actor StdStream
  :let _stream CPointer(None)'ref
  :new _out: @_stream = LibPony.pony_os_stdout
  :new _err: @_stream = LibPony.pony_os_stderr

  :: Write the given string to the stream, followed by a newline character.
  :be print(data String)
    LibPony.pony_os_std_print(@_stream, data.cpointer, data.size)

  :: Write the given string to the stream, without a newline character.
  :be write(data String)
    LibPony.pony_os_std_write(@_stream, data.cpointer, data.size)
