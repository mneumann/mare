# [PackageDev] target_format: plist, ext: tmLanguage
name: Savi
scopeName: source.savi
fileTypes: [savi]
uuid: 6d792077-696c-6465-7374-20647265616d
patterns:

- comment: Line Comment
  name: comment.line.savi
  begin: \s*(//)
  end: ($)

- comment: Doc Comment
  name: comment.doc.savi
  begin: \s*(::)
  end: ($)

- comment: Capability Operator
  name: meta.operator.capability.savi
  match: (\')(\w+)(?=[^\'])
  captures:
    '1': {name: keyword.operator.capability.savi}
    '2': {name: entity.name.identifier.savi}

- comment: Double-Quote String
  name: string.quoted.double.savi
  begin: (\w?")
  end: (")
  patterns:
  - include: '#interpolation'
  - name: constant.character.escape.savi
    match: \\.

- comment: Single-Char String
  name: string.quoted.single.savi
  begin: (')
  end: (')
  patterns:
  - name: constant.character.escape.savi
    match: \\.

- comment: Class (or other type)
  name: meta.class.savi
  match: (_?[A-Z]\w*)
  captures:
    '1': {name: support.class.savi}

- comment: Declare
  name: meta.declare.savi
  begin: ^\s*(:)(\w+)
  end: (:)|\n
  beginCaptures:
    '1': {name: keyword.declare.savi}
    '2': {name: keyword.declare.savi}
  endCaptures:
    '1': {name: keyword.declare.savi}
  patterns:
  - name: entity.other.attribute-name.savi
    match: \b[a-z_]\w*\b(?!\!)
  - include: $self

- comment: Error-Raising Calls/Names
  name: markup.deleted.savi
  match: ((\w+|\+|\-|\*)\!)

- comment: Numeric Values
  name: constant.numeric.savi
  match: \b\d([\d_]*(\.[\d_]+)?)\b

- comment: Hex Numeric Values
  name: constant.numeric.savi
  match: \b0x([0-9a-fA-F_]+)\b

- comment: Binary Numeric Values
  name: constant.numeric.savi
  match: \b0b([01_]+)\b

- comment: Function Call (with braces)
  name: entity.name.function.savi
  match: (\w+(?:\?|\!)?)(?=\()

- comment: Function Call (with receiver)
  name: support.function.savi
  match: (?<=\.)(\w+(?:\?|\!)?)

- comment: Function Call (with self receiver)
  name: support.function.savi
  match: (?<=@)(\w+(?:\?|\!)?)

- comment: Parenthesis
  name: meta.parens.savi
  begin: (\()
  end: (\))
  beginCaptures: {'1': {name: punctuation.section.paren.savi}}
  endCaptures:   {'1': {name: punctuation.section.paren.savi}}
  patterns:
  - include: $self

- comment: Brace
  name: meta.braces.savi
  begin: (\{)
  end: (\})
  beginCaptures: {'1': {name: punctuation.section.brace.savi}}
  endCaptures:   {'1': {name: punctuation.section.brace.savi}}
  patterns:
  - include: $self

- comment: Bracket
  name: meta.brackets.savi
  begin: (\[)
  end: (\])(\!)?
  beginCaptures: {'1': {name: punctuation.section.bracket.savi}}
  endCaptures:   {'1': {name: punctuation.section.bracket.savi}, '2': {name: markup.deleted.savi}}
  patterns:
  - include: $self

- comment: Bracket
  name: meta.brackets.savi
  begin: (\[)
  end: (\])
  beginCaptures: {'1': {name: punctuation.section.bracket.savi}}
  endCaptures:   {'1': {name: punctuation.section.bracket.savi}}
  patterns:
  - include: $self

- comment: Expression Separators
  name: punctuation.separator.savi
  match: (\,|\;|\:)

- comment: Other "Punctuation"
  name: punctuation.receiver.savi
  match: (@|\.)

- comment: Piping Operators
  name: keyword.operator.pipe.savi
  match: (\|\>)

- comment: Branching Operators
  name: keyword.operator.compound.savi
  match: (\&\&|\|\||\?\?|\&\?|\|\?|\.\?)

- comment: Comparison Operators
  name: keyword.operator.comparison.savi
  match: (\<\=\>|\=\~|\=\=|\<\=|\>\=|\<|\>)

- comment: Arithmetic Operators
  name: keyword.operator.arithmetic.savi
  match: (\+|\-|\/|\*|\%)

- comment: Assignment Operators
  name: keyword.operator.assignment.savi
  match: (\=)

- comment: Other Operators
  name: keyword.operator.other.savi
  match: (\!|\<\<|\<|\&|\|)

- comment: Identifiers
  name: entity.name.identifier.savi
  match: \w+

repository:
  interpolation:
    patterns:
    - comment: String Interpolation
      name: meta.embedded.savi
      begin: (\\\()
      end: (\))
      beginCaptures: {'1': {name: punctuation.section.embedded.begin.savi}}
      endCaptures:   {'1': {name: punctuation.section.embedded.end.savi}}
      patterns:
      - include: $self